require 'json'

module Dependency 
  class JsonGenerator 
    # @param [Array<Specification>] specs a list specification
    def create_hash(specs)
      dependencies = []
      specs.each { | spec |
         dependencies << SpecNode.new(spec)
      }
      
      {:dependencies: dependencies}
    end

    # @param  [UmbrellaTargetDescription] umbrella_target the CocoaPods umbrella targets generated by the installer.
    # @param  [Hash{<String, Specification>}] module_spec_hash 
    #
    def generate(umbrella_target, module_spec_hash)
      @module_spec_hash = module_spec_hash
      dependency_hash = create_hash(umbrella_target.specs)
      puts dependency_hash.to_json
    end

    class SpecNode 
    def spec_brief_info(spec)
      spec_brief = {}
      spec_brief[name] = spec.name
      spec_brief[module_name] = spec.module_name
      spec_brief[source] = spec.source
      spec_brief[version] = spec.version
      spec_brief[homepage] = spec.homepage
      spec_brief[local] =  spec.local? if spec.source
      spec_brief[summary] = spec.root.attributes_hash['summary']
      spec_brief[subspec] = spec.subspecs 
  
      spec_brief
    end

    def initialize(spec) 
      @name = spec_brief_info(spec)
      @dependencies = []
      spec.dependencies.each { | dependency |
        d_spec = @module_spec_hash[dependency.name]
        @dependencies << SpecNode(d_spec)
      }
    end
    end
  end
end